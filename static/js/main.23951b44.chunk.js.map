{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Redux/contacts-selectors.js","Components/Services/contactsApi.js","Components/ContactList/ContactList.js","Redux/contacts-actions.js","Components/Filter/Filter.js","Components/ContactForm/ContactForm.js","App.js","Redux/contacts-reducer.js","Redux/store.js","index.js"],"names":["module","exports","getFilter","state","filter","contactsApi","createApi","reducerPath","tagTypes","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","fetchContacts","query","providesTags","result","map","type","id","deleteContact","mutation","url","method","invalidatesTags","addContact","newContact","body","useFetchContactsQuery","useDeleteContactMutation","useAddContactMutation","ContactList","useState","contacts","setContacts","InputValue","useSelector","data","error","isLoading","isError","isDeleting","contactsNotFoundError","useEffect","name","toLowerCase","includes","className","s","ContactsList","length","phone","onClick","filterItems","createAction","Filter","dispatch","useDispatch","htmlFor","pattern","title","onChange","e","target","value","ContactForm","isAdding","inputNameId","uuidv4","inputNumberId","setName","number","setNumber","contact","handleChangeEvent","handleSubmit","a","preventDefault","some","alert","Phonebook","onSubmit","required","App","filterReducer","createReducer","_","payload","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23951b44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsList\":\"ContactList_ContactsList__2QcPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__I1D3Y\"};","// export const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.filter;\r\n\r\n// export const getVisibleContacts = (state) => {\r\n//   const allContacts = getContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   console.log(normalizedFilter);\r\n\r\n//   return allContacts.filter(({ name }) =>\r\n//     name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n// };\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: \"contactsApi\",\r\n  tagTypes: [\"Contacts\"],\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://6192c7f3d3ae6d0017da82b6.mockapi.io/api/v1\",\r\n  }),\r\n  endpoints: (builder) => ({\r\n    fetchContacts: builder.query({\r\n      query: () => `/contacts`,\r\n      providesTags: (result) =>\r\n        result\r\n          ? [\r\n              ...result.map(({ id }) => ({ type: \"Contacts\", id })),\r\n              { type: \"Contacts\", id: \"LIST\" },\r\n            ]\r\n          : [{ type: \"Contacts\", id: \"LIST\" }],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: (id) => ({\r\n        url: `/contacts/${id}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [{ type: \"Contacts\", id: \"LIST\" }],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query: (newContact) => ({\r\n        url: `/contacts`,\r\n        method: \"POST\",\r\n        body: newContact,\r\n      }),\r\n      invalidatesTags: [\"Contacts\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useAddContactMutation,\r\n} = contactsApi;\r\n","// import {\r\n//   // itemsReducer,\r\n//   // filterReducer,\r\n//   // errorReducer,\r\n//   // isLoadingReducer,\r\n// } from \"../../Redux/contacts-reducer.js\";\r\n// import { deleteItem } from \"../../Redux/contacts-actions\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport s from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getFilter } from \"../../Redux/contacts-selectors\";\r\nimport {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n} from \"../Services/contactsApi\";\r\n\r\nconst ContactList = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const InputValue = useSelector(getFilter);\r\n  const { data, error, isLoading, isError } = useFetchContactsQuery();\r\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\r\n  const contactsNotFoundError = isError && error;\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setContacts(\r\n        data.filter(({ name }) =>\r\n          name.toLowerCase().includes(InputValue.toLowerCase())\r\n        )\r\n      );\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }, [data, InputValue]);\r\n\r\n  return (\r\n    <div className={s.ContactsList}>\r\n      {isLoading && <h2>Wait...</h2>}\r\n      {InputValue && contacts.length === 0 && <h2>No results were found...</h2>}\r\n      {contactsNotFoundError && <h2>Error...</h2>}\r\n      <ul>\r\n        {contacts &&\r\n          contacts.map(({ name, id, phone }) => (\r\n            <li key={id}>\r\n              <p>{name + \": \" + phone}</p>\r\n              <button\r\n                onClick={() => {\r\n                  deleteContact(id);\r\n                }}\r\n              >\r\n                {isDeleting ? \"Deleting\" : \"Delete\"}\r\n              </button>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n};\r\n\r\nexport default ContactList;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// export const fetchContactsRequest = createAction(\r\n//   'contacts/fetchContactsRequest',\r\n// );\r\n// export const fetchContactsSuccess = createAction(\r\n//   'contacts/fetchContactsSuccess',\r\n// );\r\n// export const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\n// export const submitForm = createAction('form/submit');\r\n// export const deleteItem = createAction('list/delete');\r\nexport const filterItems = createAction(\"list/filter\");\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { filterItems } from \"../../Redux/contacts-actions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={s.Filter}>\r\n      <label htmlFor=\"\">Find contacts by name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        onChange={(e) => {\r\n          dispatch(filterItems(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     inputSearchVal: state.contacts.filter,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     onSearchVal: e => dispatch(filterItems(e.nativeEvent.data)),\r\n//   };\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { useState } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { submitForm } from \"../../Redux/contacts-actions\";\r\nimport s from \"./ContactForm.module.css\";\r\n// import { getContacts } from \"../../Redux/contacts-selectors\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  useFetchContactsQuery,\r\n  useAddContactMutation,\r\n} from \"../Services/contactsApi\";\r\n\r\nfunction ContactForm() {\r\n  const { data } = useFetchContactsQuery();\r\n  const [addContact, { isLoading: isAdding }] = useAddContactMutation();\r\n\r\n  // const dispatch = useDispatch();\r\n  // const contactsAll = useSelector(getContacts);\r\n  const inputNameId = uuidv4();\r\n  const inputNumberId = uuidv4();\r\n  const id = uuidv4();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const contact = { name, number, id };\r\n\r\n  const handleChangeEvent = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = e.target;\r\n    const filterResult = data.some((value) => value.name === contact.name);\r\n    if (!filterResult) {\r\n      await addContact(contact);\r\n    } else alert(`${contact.name} is already in contacts`);\r\n    name.value = \"\";\r\n    number.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className={s.Phonebook}>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor={inputNameId}>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          id={inputNameId}\r\n          onChange={handleChangeEvent}\r\n        />\r\n        <label htmlFor={inputNumberId}>Number</label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          id={inputNumberId}\r\n          onChange={handleChangeEvent}\r\n        />\r\n        <button type=\"submit\">{isAdding ? \"Adding\" : \"Add Contact\"}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import './App.css';\r\nimport ContactList from './Components/ContactList/ContactList';\r\nimport Filter from './Components/Filter/Filter';\r\nimport ContactForm from './Components/ContactForm/ContactForm';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h1>Contacts</h1>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nexport const filterReducer = createReducer(\"\", {\r\n  \"list/filter\": (_, { payload }) => payload,\r\n});\r\n\r\n// const initState = [\r\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n// ];\r\n\r\n// export const itemsReducer = createReducer(initState, {\r\n//   'form/submit': (state, { payload }) => [...state, payload],\r\n//   'list/delete': (state, { payload }) =>\r\n//     state.filter(contact => contact.id !== payload),\r\n// });\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  // itemsReducer,\r\n  filterReducer,\r\n  // errorReducer,\r\n  // isLoadingReducer,\r\n} from \"./contacts-reducer\";\r\n// import { combineReducers } from \"redux\";\r\n// import storage from 'redux-persist/lib/storage';\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport logger from \"redux-logger\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\r\nimport { contactsApi } from \"../Components/Services/contactsApi\";\r\n// const persistConfig = {\r\n//   key: 'contacts',\r\n//   version: 1,\r\n//   storage,\r\n//   blacklist: ['filter'],\r\n// };\r\n// const contactsReducer = combineReducers({\r\n//   items: itemsReducer,\r\n//   filter: filterReducer,\r\n//   // loading: isLoadingReducer,\r\n//   // error: errorReducer,\r\n// });\r\n// const persistedContactsReducer = persistReducer(persistConfig, contactsReducer);\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n    filter: filterReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(contactsApi.middleware, logger),\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n\r\n// export const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './Redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <PersistGate loading={null} persistor={persistor}> */}\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    {/* </PersistGate> */};\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}